func <- function(x) {}
func()
func <- function(x) {
return 3
}
func <- function(x) {
return 3
}
square.it <- function(x) {
square <- x * x
return(square)
}
a <- function(x) {}
a <- function(x) {
return x
}
square.it <- function(x) {
square <- x * x
return(square)
}
m <- function(x) { return 3}
m <- function(x) { return x }
square.it <- function(x) {
square <- x * x
return(square)
}
a <- function(x) {
return(x)
}
a(3)
a(6)
for(x = 1; x < 5; x++) {
print(x)
}
for(i in 1:10) {
print(i)
}
log_gamma_loop <- function(n) {
res <- 1
}
log_gamma_loop <- function(n) {
res <- 1
for(i in 1:n) {
res <- res * i
}
return(log(res))
}
print(log_gamma_loop(5))
log_gamma_loop <- function(n) {
res <- 1
for(i in 1:n-1) {
res <- res * i
}
return(log(res))
}
print(log_gamma_loop(5))
log_gamma_loop <- function(n) {
res <- 1
for(i in 1:(n-1)) {
res <- res * i
}
return(log(res))
}
print(log_gamma_loop(5))
#asd
# hello
print(5)
log_gamma_loop <- function(n) {
if(n == 1) {
return 0
}
return(log(res))
}
log(1)
log_gamma_loop <- function(n) {
if(n==1) {}
}
log_gamma_loop <- function(n) {
if(n==2){
return
}
}
print(log_gamma_loop(1))
log_gamma_loop <- function(n) {
if(n==1){
return 0
}
res <- 1
for(i in 1:(n-1)) {
res <- res * i
}
return(log(res))
}
log_gamma_loop <- function(n) {
if(n==1){
return(0)
}
res <- 1
for(i in 1:(n-1)) {
res <- res * i
}
return(log(res))
}
log_gamma_loop <- function(n) {
if(n==1){
return(0)
}
res <- 1
for(i in 1:(n-1)) {
res <- res * i
}
return(log(res))
}
print(log_gamma_loop(1))
print(log_gamma_loop(5))
print(log_gamma_loop(2))
log_gamma_loop <- function(n) {
if(n==1 | n==0){
return(0)
}
res <- 1
for(i in 1:(n-1)) {
res <- res * i
}
return(log(res))
}
print(log_gamma_loop(1))
print(log_gamma_loop(0))
log_gamma_recursive <- function(n) {
if(n==1 | n==0){
return(0)
}
return(log(n-1)+log_gamma_recursive(n-2))
}
print(log_gamma_recursice(0))
print(log_gamma_recursive(0))
print(log_gamma_recursive(5))
log_gamma_recursive <- function(n) {
if(n==1 | n==0){
return(0)
}
return(log(n-1)+log_gamma_recursive(n-1))
}
print(log_gamma_recursive(0))
print(log_gamma_recursive(1))
print(log_gamma_recursive(2))
print(log_gamma_recursive(5))
getwd()
setwd("/Users/donnice/Documents/Computer Science/Data Science/R Practicing")
getwd()
x <- c(4, 3, 3, 4, 3, 1)
length(x)
y = vector(mode="logical", length = 4)
y
sum_log_gamma_loop <- function(n) {
if(n==0 | n==1){
return(0)
}
res <- 0
for(i in 1:n) {
res <- res + log_gamma_loop(i)
}
return(res)
}
system.time(sum_log_gamma_loop(100))
# Q2
log_gamma_loop <- function(n) {
if(n==1 | n==0){
return(0)
}
res <- 1
for(i in 1:(n-1)) {
res <- res * i
}
return(log(res))
}
# Q3
log_gamma_recursive <- function(n) {
if(n==1 | n==0){
return(0)
}
return(log(n-1)+log_gamma_recursive(n-1))
}
# Q4
sum_log_gamma_loop <- function(n) {
if(n==0 | n==1){
return(0)
}
res <- 0
for(i in 1:n) {
res <- res + log_gamma_loop(i)
}
return(res)
}
sum_log_gamma_recursive <- function(n) {
if(n==0 | n==1){
return(0)
}
return(log_gamma_recursive(n)+sum_log_gamma_recursive(n-1))
}
# Q5
sum_lgamma <- function(n) {
res <- 0
for(i in 1:n) {
res <- res + lgamma(i)
}
return(res)
}
system.time(sum_log_gamma_loop(100))
system.time(sum_log_gamma_loop(10000))
system.time(sum_log_gamma_recursive(10000))
system.time(sum_log_gamma_recursive(1000))
system.time(sum_log_gamma_recursive(5000))
system.time(sum_log_gamma_recursive(1000))
system.time(sum_log_gamma_recursive(1000))
systemtime(sum_lgamma(1000))
system.time(sum_lgamma(1000))
system.time(sum_log_gamma_loop(1000))
a <- c(1,2,3,4)
a.append(5)
c <- rbind(c, 5)
a <- rbind(a, 5)
a
a
x <- c(1,2,3,4)
x <- rbind(5)
x
c <- c(1,2,3,4)
c <- c(c, 5)
c
getwd()
